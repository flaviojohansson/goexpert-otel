services:
  # jaeger-all-in-one:
  #   image: jaegertracing/all-in-one:latest
  #   restart: always
  #   ports:
  #     - "16686:16686"
  #     - "14268"
  #     - "14250"

  # zipkin-all-in-one:
  #   image: openzipkin/zipkin:latest
  #   restart: always
  #   ports:
  #     - "9411:9411"

  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:latest
  #   restart: always
  #   volumes:
  #     - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  # otel-collector:
  #   image: otel/opentelemetry-collector:latest
  #   restart: always
  #   command: ["--config=/etc/otel-collector-config.yaml"]
  #   volumes:
  #     - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   ports:
  #     - "1888:1888"   # pprof extension
  #     - "8888:8888"   # Prometheus metrics exposed by the collector
  #     - "8889:8889"   # Prometheus exporter metrics
  #     - "13133:13133" # health_check extension
  #     - "4317:4317"   # OTLP gRPC receiver
  #     - "55679:55679" # zpages extension
  #     - "4318:4318"   # OTLP HTTP receiver

  service-a:
    container_name: service-a
    build:
      context: ./service-a
    environment:
      - OTEL_SERVICE_NAME=service-a
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4318
      - REQUEST_NAME_OTEL=service-a-request
    # depends_on:
    #   - jaeger-all-in-one
    #   - zipkin-all-in-one
    #   - prometheus
    #   - otel-collector
    ports:
      - "8080:8080"

  service-b:
    container_name: service-b
    build:
      context: ./service-b
    environment:
      - OTEL_SERVICE_NAME=service-b
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4318
      - REQUEST_NAME_OTEL=service-b-request
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    # depends_on:
    #   - jaeger-all-in-one
    #   - zipkin-all-in-one
    #   - prometheus
    #   - otel-collector
